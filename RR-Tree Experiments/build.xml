<!-- (C) 2009, 2010, 2011, 2012 Laurynas Biveinis

     This file is part of RR-Tree.

     RR-Tree is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.

     RR-Tree is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with RR-Tree.  If not, see <http://www.gnu.org/licenses/>.
-->
<project name="rr-tree-exp">
    <dirname property="rr-tree-exp.root" file="${ant.file.rr-tree-exp}"/>

    <property file="../build.properties"/>

    <import file="../build-common.xml"/>
    <import file="../experimental-driver/build.xml"/>

    <path id="rr-tree-exp.run.classpath">
        <path refid="exp-driver.compile.classpath"/>
        <pathelement location="${exp-driver.dest}"/>
        <pathelement location="${lib-workload.dest}"/>
    </path>

    <!-- General macros -->

    <macrodef name="gnuplot-rum">
        <attribute name="input"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="cachesize"/>
        <attribute name="otherarg" default=""/>
        <sequential>
            <exec executable="${rootdir}/rum-tree/expdriver" output="@{output.dir}/@{output}" 
                  append="yes" failonerror="true" vmlauncher="false">
                <arg value="--quiet"/>
                <arg value="--input=@{input}"/>
                <arg value="--cache=@{cachesize}"/>
                <arg value="@{otherarg}"/>
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="run-tree">
        <attribute name="tree" default="RR_TREE"/>
        <attribute name="input"/>
        <attribute name="inputqueries"/>
        <attribute name="queryratio"/>
        <attribute name="output.dir"/>
        <attribute name="output"/>
        <attribute name="bufsize" default="0"/>
        <attribute name="cachesize" default="0"/>
        <attribute name="pushdownstrategy" default="EVERYTHING"/>
        <attribute name="threshold" default="1"/>
        <attribute name="groupsizecoeff" default="1.0"/>
        <attribute name="nodesize" default="4096"/>
        <attribute name="sizeby" default="insertions"/>
        <attribute name="persistent" default="false"/>
        <attribute name="gc" default="NONE"/>
        <attribute name="gcinvocation" default="NONE"/>
        <attribute name="gcinterval" default="0"/>
        <attribute name="gcdisksize" default="0.0"/>
        <attribute name="gcindexcache" default="0"/>
        <attribute name="gcinitscratchmem" default="40960"/>
        <attribute name="updateindexpiggybacking" default=""/>
        <attribute name="updateleafpiggybacking" default=""/>
        <attribute name="updatepiggybackingepsilon" default="0.0"/>
        <attribute name="querypiggybacking" default=""/>
        <attribute name="otherarg" default=""/>
        <sequential>
            <java classname="aau.testDriver.TestDriver" maxmemory="1024m"
                classpathref="rr-tree-exp.run.classpath" fork="yes" failonerror="yes"
                output="@{output.dir}/@{output}" append="yes" dir="@{output.dir}">
<!--
              <assertions enableSystemAssertions="true">
                <enable/>
              </assertions>
-->
                <arg value="--input"/>
                <arg file="@{input}"/>
                <arg value="--inputqueries"/>
                <arg file="@{inputqueries}"/>
                <arg value="--queryratio"/>
                <arg value="@{queryratio}"/>
                <arg value="--tree"/>
                <arg value="@{tree}"/>
                <arg value="--bufsize"/>
                <arg value="@{bufsize}"/>
                <arg value="--cache"/>
                <arg value="@{cachesize}"/>
                <arg value="--pushdown"/>
                <arg value="@{pushdownstrategy}"/>
                <arg value="--mingroupsize"/>
                <arg value="@{threshold}"/>
                <arg value="--nodesize"/>
                <arg value="@{nodesize}"/>
                <arg value="--groupsizecoeff"/>
                <arg value="@{groupsizecoeff}"/>
                <arg value="--sizeby"/>
                <arg value="@{sizeby}"/>
                <arg value="--gc"/>
                <arg value="@{gc}"/>
                <arg value="--gcinvocation"/>
                <arg value="@{gcinvocation}"/>
                <arg value="--gcinterval"/>
                <arg value="@{gcinterval}"/>
                <arg value="--gcdisksize"/>
                <arg value="@{gcdisksize}"/>
                <arg value="--gcindexcache"/>
                <arg value="@{gcindexcache}"/>
                <arg value="--gcinitscratchmem"/>
                <arg value="@{gcinitscratchmem}"/>
                <arg value="--gcfulleb"/>
                <arg value="--persistent"/>
                <arg value="@{persistent}"/>
<!--
                <arg value="- -trackobject"/>
                <arg value="121670"/>
-->
                <arg value="--verifyonfinish"/> 
<!--                <arg value="- -verifyonio"/> -->
<!--                <arg value="- -checktreeinvariants"/> -->
                <arg value="--piggybackingepsilon"/>
                <arg value="@{updatepiggybackingepsilon}"/>
                <arg value="@{updateindexpiggybacking}"/>
                <arg value="@{updateleafpiggybacking}"/>
                <arg value="@{querypiggybacking}"/>
                <arg value="@{otherarg}"/>
            </java>
        </sequential>
    </macrodef>

    <macrodef name="verbose-tree">
        <attribute name="tree" default="RR_TREE"/>
        <attribute name="input"/>
        <attribute name="inputqueries"/>
        <attribute name="queryratio"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="bufsize" default="0"/>
        <attribute name="cachesize" default="0"/>
        <attribute name="pushdownstrategy" default="EVERYTHING"/>
        <attribute name="threshold" default="1"/>
        <attribute name="nodesize" default="4096"/>
        <attribute name="groupsizecoeff" default="1.0"/>
        <attribute name="sizeby" default="insertions"/>
        <attribute name="gc" default="NONE"/>
        <attribute name="gcinvocation" default="NONE"/>
        <attribute name="gcinterval" default="0"/>
        <attribute name="gcdisksize" default="0.0"/>
        <attribute name="gcindexcache" default="0"/>
        <attribute name="persistent" default="false"/>
        <attribute name="updatepiggybackingepsilon" default="0.0"/>
        <attribute name="updateindexpiggybacking" default=""/>
        <attribute name="updateleafpiggybacking" default=""/>
        <attribute name="querypiggybacking" default=""/>
        <attribute name="otherarg" default=""/>
        <sequential>
            <delete file="@{output.dir}/@{output}" failonerror="no"/>
            <run-tree tree="@{tree}" input="@{input}" inputqueries="@{inputqueries}" queryratio="@{queryratio}" output="@{output}" bufsize="@{bufsize}"
                      sizeby="@{sizeby}" cachesize="@{cachesize}" pushdownstrategy="@{pushdownstrategy}"
                      threshold="@{threshold}" nodesize="@{nodesize}" groupsizecoeff="@{groupsizecoeff}"
                      persistent="@{persistent}" 
                      gc="@{gc}" gcinvocation="@{gcinvocation}" gcinterval="@{gcinterval}" gcdisksize="@{gcdisksize}"
                      gcindexcache="@{gcindexcache}"
                      updateindexpiggybacking="@{updateindexpiggybacking}" 
                      updateleafpiggybacking="@{updateleafpiggybacking}" 
                      updatepiggybackingepsilon="@{updatepiggybackingepsilon}"
                      querypiggybacking="@{querypiggybacking}" 
                      output.dir="@{output.dir}" otherarg="@{otherarg}"/>
        </sequential>
    </macrodef>

    <macrodef name="verbose-tree-best-spf-tput-1">
      <attribute name="tree" default="UPDATE_RR_TREE"/>
      <attribute name="input"/>
      <attribute name="inputqueries" default="${spf.queries}"/>
      <attribute name="queryratio" default="1000"/>
      <attribute name="output"/>
      <attribute name="output.dir"/>
      <attribute name="bufsize" default="17000"/>
      <attribute name="cachesize" default="0"/>
      <attribute name="pushdownstrategy" default="ROOT_THRESHOLD"/>
      <attribute name="threshold" default="250"/>
      <attribute name="nodesize" default="4096"/>
      <attribute name="groupsizecoeff" default="1.0"/>
      <attribute name="sizeby" default="insertions"/>
      <attribute name="gc" default="NONE"/>
      <attribute name="gcinvocation" default="NONE"/>
      <attribute name="gcinterval" default="0"/>
      <attribute name="gcdisksize" default="0.0"/>
      <attribute name="gcindexcache" default="0"/>
      <attribute name="persistent" default="false"/>
      <attribute name="updatepiggybackingepsilon" default="0.0"/>
      <attribute name="updateindexpiggybacking" default=""/>
      <attribute name="updateleafpiggybacking" default=""/>
      <attribute name="querypiggybacking" default=""/>
      <attribute name="otherarg" default=""/>
      <sequential>
        <verbose-tree tree="@{tree}" input="@{input}" inputqueries="@{inputqueries}" 
                      queryratio="@{queryratio}" output="@{output}" output.dir="@{output.dir}" 
                      bufsize="@{bufsize}" cachesize="@{cachesize}" pushdownstrategy="@{pushdownstrategy}"
                      threshold="@{threshold}" nodesize="@{nodesize}" groupsizecoeff="@{groupsizecoeff}"
                      sizeby="@{sizeby}" gc="@{gc}" gcinvocation="@{gcinvocation}" gcinterval="@{gcinterval}"
                      gcdisksize="@{gcdisksize}" persistent="@{persistent}"
                      updatepiggybackingepsilon="@{updatepiggybackingepsilon}"
                      updateindexpiggybacking="@{updateindexpiggybacking}" 
                      updateleafpiggybacking="@{updateleafpiggybacking}" 
                      querypiggybacking="@{querypiggybacking}" otherarg="@{otherarg}"/>
      </sequential>
    </macrodef>

    <macrodef name="verbose-tree-best-spf-latency-1">
      <attribute name="tree" default="UPDATE_RR_TREE"/>
      <attribute name="input"/>
      <attribute name="inputqueries" default="${spf.queries}"/>
      <attribute name="queryratio" default="1000"/>
      <attribute name="output"/>
      <attribute name="output.dir"/>
      <attribute name="bufsize" default="17000"/>
      <attribute name="cachesize" default="0"/>
      <attribute name="pushdownstrategy" default="THRESHOLD"/>
      <attribute name="threshold" default="4"/>
      <attribute name="nodesize" default="4096"/>
      <attribute name="groupsizecoeff" default="1.0"/>
      <attribute name="sizeby" default="insertions"/>
      <attribute name="gc" default="NONE"/>
      <attribute name="gcinvocation" default="NONE"/>
      <attribute name="gcinterval" default="0"/>
      <attribute name="gcdisksize" default="0.0"/>
      <attribute name="gcindexcache" default="0"/>
      <attribute name="persistent" default="false"/>
      <attribute name="updatepiggybackingepsilon" default="0.0"/>
      <attribute name="updateindexpiggybacking" default=""/>
      <attribute name="updateleafpiggybacking" default=""/>
      <attribute name="querypiggybacking" default=""/>
      <attribute name="otherarg" default=""/>
      <sequential>
        <verbose-tree tree="@{tree}" input="@{input}" inputqueries="@{inputqueries}" 
                      queryratio="@{queryratio}" output="@{output}" output.dir="@{output.dir}" 
                      bufsize="@{bufsize}" cachesize="@{cachesize}" pushdownstrategy="@{pushdownstrategy}"
                      threshold="@{threshold}" nodesize="@{nodesize}" groupsizecoeff="@{groupsizecoeff}"
                      sizeby="@{sizeby}" gc="@{gc}" gcinvocation="@{gcinvocation}" gcinterval="@{gcinterval}"
                      gcdisksize="@{gcdisksize}" persistent="@{persistent}"
                      updatepiggybackingepsilon="@{updatepiggybackingepsilon}"
                      updateindexpiggybacking="@{updateindexpiggybacking}" 
                      updateleafpiggybacking="@{updateleafpiggybacking}" 
                      querypiggybacking="@{querypiggybacking}" otherarg="@{otherarg}"/>
      </sequential>
    </macrodef>

    <macrodef name="gnuplot-tree">
        <attribute name="tree" default="RR_TREE"/>
        <attribute name="input"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="bufsize" default="0"/>
        <attribute name="cachesize" default="0"/>
        <attribute name="pushdownstrategy" default="EVERYTHING"/>
        <attribute name="threshold" default="1"/>
        <attribute name="nodesize" default="4096"/>
        <attribute name="persistent" default="false"/>
        <attribute name="groupsizecoeff" default="1.0"/>
        <attribute name="sizeby" default="insertions"/>
        <sequential>
            <run-tree tree="@{tree}" input="@{input}" output="@{output}" bufsize="@{bufsize}" sizeby="@{sizeby}"
                         cachesize="@{cachesize}" pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}"
                         nodesize="@{nodesize}" groupsizecoeff="@{groupsizecoeff}" persistent="@{persistent}"
                         output.dir="@{output.dir}" otherarg="--quiet"/>
        </sequential>
    </macrodef>

    <!-- Specific macros -->

    <macrodef name="run-workload-duration">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="pushdownstrategy"/>
        <attribute name="bufsize"/>
        <attribute name="groupsizecoeff" default="1.0"/>
        <attribute name="threshold" default="1"/>
        <attribute name="sizeby" default="insertions"/>
        <sequential>
            <delete file="@{output.dir}/@{output}" failonerror="no"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}1.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}" 
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}2.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}" 
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}3.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}" 
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}4.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}" 
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}5.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}"
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}6.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}"
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
            <gnuplot-tree tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" input="@{input.dir}/@{input}7.out"
                          output="@{output}" output.dir="@{output.dir}" groupsizecoeff="@{groupsizecoeff}"
                          threshold="@{threshold}" sizeby="@{sizeby}"/>
        </sequential>
    </macrodef>

    <macrodef name="run-pushdown-strategy-data-tree">
        <attribute name="input.path"/>
        <attribute name="input"/>
	<attribute name="output.path"/>
        <attribute name="updateindexpiggybacking" default=""/>
        <attribute name="updateleafpiggybacking" default=""/>
        <sequential>
        <parallel threadCount="4">

	    <!-- Everything -->

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="EVERYTHING" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_everything.out" threshold="500"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}"
                          inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_SPLIT_DELS" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargestsplit.out" bufsize="17000"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST"
                          output.dir="@{output.path}" output="@{input}_buflargest_si.out" bufsize="17000"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargest.out" bufsize="17000"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_SPLIT_DELS" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestsplit_si.out"/>

	    <!-- BufLargestTreshIns -->

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold5_si.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold10_si.out" threshold="10"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold50_si.out" threshold="50"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold100_si.out" threshold="100"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold500_si.out" threshold="500"/>

	    <!-- BufLargestThreshAll -->

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold5.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold10.out" threshold="10"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold50.out" threshold="50"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold100.out" threshold="100"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold500.out" threshold="500"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold2.out" threshold="2"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold3.out" threshold="3"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold4.out" threshold="4"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold5.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold10.out" threshold="10"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold50.out" threshold="50"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold100.out" threshold="100"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_threshold500.out" threshold="500"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.8_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.9_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"
                          output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.0_si.out" bufsize="17000"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.1_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.2_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.3" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.3_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.4" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.4_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.5" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.5_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.6" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.6_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.7" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.7_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.8_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="1.9" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.9_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="2.0" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST2.0_si.out" />

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="0.6" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.6_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"
                          groupsizecoeff="0.7" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.7_si.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.8.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"  sizeby="allops" 
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.9.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" sizeby="allops"
                          output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.0.out" bufsize="17000"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.1.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.2.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.6" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.6.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.7" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.7.out" />
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.8.out" />

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.8_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.9_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="0.95" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.95_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.0_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.05" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.05_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.1_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.15" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.15_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.2_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.25" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.25_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.3" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.3_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.4" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.4_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.5" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.5_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.6" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.6_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.7" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.7_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.8" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.8_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="1.9" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.9_si.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"
                          groupsizecoeff="2.0" output.dir="@{output.path}" output="@{input}_buflargestdivfanout2.0_si.out"/>


            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="0.6" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.6.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="0.7" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.7.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.8.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.9.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"  
                          output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.0.out" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.1.out"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" 
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.2.out"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold2_si.out" threshold="2"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold3_si.out" threshold="3"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold4_si.out" threshold="4"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold5_si.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold50_si.out" threshold="50"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold100_si.out" threshold="100"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold250_si.out" threshold="250"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold350_si.out" threshold="350"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold400_si.out" threshold="400"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold450_si.out" threshold="450"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold500_si.out" threshold="500"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold550_si.out" threshold="550"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold600_si.out" threshold="600"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold700_si.out" threshold="700"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold750_si.out" threshold="750"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold800_si.out" threshold="800"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold900_si.out" threshold="900"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold1000_si.out" threshold="1000"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold1050_si.out" threshold="1050"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold3000_si.out" threshold="3000"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold4000_si.out" threshold="4000"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold5000_si.out" threshold="5000"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold6000_si.out" threshold="6000"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold2.out" threshold="2" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold3.out" threshold="3" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold4.out" threshold="4" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold5.out" threshold="5" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold10.out" threshold="10" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold50.out" threshold="50" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold100.out" threshold="100" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold250.out" threshold="250" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_rthreshold400.out" threshold="400"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold500.out" threshold="500" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_rthreshold600.out" threshold="600"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_rthreshold700.out" threshold="700"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" 
                          output.dir="@{output.path}" output="@{input}_rthreshold750.out" threshold="750" sizeby="allops"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold1500_si.out" threshold="1500"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" 
                          input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_rthreshold2000_si.out" threshold="2000"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2_si.out" threshold="2"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5_si.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10_si.out" threshold="10"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15_si.out" threshold="15"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout25_si.out" threshold="25"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout50_si.out" threshold="50"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout100_si.out" threshold="100"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout500_si.out" threshold="500"/>

            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2.out" threshold="2"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10.out" threshold="10"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15.out" threshold="15"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2.out" threshold="2"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5.out" threshold="5"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10.out" threshold="10"/>
            <verbose-tree tree="RR_TREE" updateindexpiggybacking="@{updateindexpiggybacking}" updateleafpiggybacking="@{updateleafpiggybacking}" input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" 
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15.out" threshold="15"/>
        </parallel>
        </sequential>
    </macrodef>

    <macrodef name="run-pushdown-strategy-update-tree">
        <attribute name="input.path"/>
        <attribute name="input"/>
	<attribute name="output.path"/>
        <attribute name="epsilon" default="0.0"/>
        <sequential>
        <parallel threadCount="4">

	    <!-- Everything -->

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="EVERYTHING" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_everything.out" threshold="500" updatepiggybackingepsilon="@{epsilon}"/>

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargest.out" bufsize="17000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargest_si.out" bufsize="17000" updatepiggybackingepsilon="@{epsilon}"/>


	    <!-- BufLargestThreshAll -->

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold5.out" threshold="5" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold10.out" threshold="10" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold50.out" threshold="50" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold100.out" threshold="100" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold500.out" threshold="500" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold600.out" threshold="600" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold700.out" threshold="700" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold800.out" threshold="800" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold900.out" threshold="900" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold1000.out" threshold="1000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold2000.out" threshold="2000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold3000.out" threshold="3000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold4000.out" threshold="4000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold5000.out" threshold="5000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold6000.out" threshold="6000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold7000.out" threshold="7000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold8000.out" threshold="8000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold9000.out" threshold="9000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold10000.out" threshold="10000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold5_si.out" threshold="5"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold10_si.out" threshold="10" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold50_si.out" threshold="50" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold100_si.out" threshold="100" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold500_si.out" threshold="500" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold600_si.out" threshold="600" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold700_si.out" threshold="700" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold800_si.out" threshold="800" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold900_si.out" threshold="900" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold1000_si.out" threshold="1000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold2000_si.out" threshold="2000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold3000_si.out" threshold="3000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold4000_si.out" threshold="4000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold5000_si.out" threshold="5000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold6000_si.out" threshold="6000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold7000_si.out" threshold="7000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold8000_si.out" threshold="8000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold9000_si.out" threshold="9000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestthreshold10000_si.out" threshold="10000" 
                          updatepiggybackingepsilon="@{epsilon}"/>

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold2.out" threshold="2" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold3.out" threshold="3" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold4.out" threshold="4" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold5.out" threshold="5" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold10.out" threshold="10" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold50.out" threshold="50" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold100.out" threshold="100" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold500.out" threshold="500" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold600.out" threshold="600" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold700.out" threshold="700" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold800.out" threshold="800" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold900.out" threshold="900" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold1000.out" threshold="1000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold2000.out" threshold="2000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold3000.out" threshold="3000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold4000.out" threshold="4000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold5000.out" threshold="5000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold6000.out" threshold="6000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold7000.out" threshold="7000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold8000.out" threshold="8000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold9000.out" threshold="9000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold10000.out" threshold="10000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold2_si.out" threshold="2" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold3_si.out" threshold="3" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold4_si.out" threshold="4" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold5_si.out" threshold="5" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold10_si.out" threshold="10" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold50_si.out" threshold="50" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold100_si.out" threshold="100" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold500_si.out" threshold="500" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold600_si.out" threshold="600" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold700_si.out" threshold="700" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold800_si.out" threshold="800" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold900_si.out" threshold="900" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold1000_si.out" threshold="1000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold2000_si.out" threshold="2000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold3000_si.out" threshold="3000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold4000_si.out" threshold="4000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold5000_si.out" threshold="5000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold6000_si.out" threshold="6000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold7000_si.out" threshold="7000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold8000_si.out" threshold="8000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold9000_si.out" threshold="9000" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_threshold10000_si.out" threshold="10000" updatepiggybackingepsilon="@{epsilon}"/>

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.8.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"  sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.9.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" sizeby="allops"
                          output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.0.out" bufsize="17000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.1.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.2.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.6" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.6.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.7" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.7.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.8.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.8_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000"  sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST0.9_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" sizeby="insertions"
                          output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.0_si.out" bufsize="17000" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.1_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.2_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.6" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.6_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.7" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.7_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.8" output.dir="@{output.path}" output="@{input}_BUF_LARGEST_DIV_BY_CONST1.8_si.out"  
                          updatepiggybackingepsilon="@{epsilon}"/>

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.6" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.6.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.7" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.7.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.8.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.9.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"  tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.0.out" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.1.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.2.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.6" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.6_si.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.7" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.7_si.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.8" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.8_si.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="0.9" output.dir="@{output.path}" output="@{input}_buflargestdivfanout0.9_si.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000"  tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.0_si.out" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.1" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.1_si.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          groupsizecoeff="1.2" output.dir="@{output.path}" output="@{input}_buflargestdivfanout1.2_si.out" 
                          updatepiggybackingepsilon="@{epsilon}"/>

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold2.out" threshold="2" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold3.out" threshold="3" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold4.out" threshold="4" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold5.out" threshold="5" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold10.out" threshold="10" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold50.out" threshold="50" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold100.out" threshold="100" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold250.out" threshold="250" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold400.out" threshold="400" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold500.out" threshold="500" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold600.out" threshold="600" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold700.out" threshold="700" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold750.out" threshold="750" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold800.out" threshold="800" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold900.out" threshold="900" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold1000.out" threshold="1000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold1500.out" threshold="1500" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold2000.out" threshold="2000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold3000.out" threshold="3000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold4000.out" threshold="4000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold5000.out" threshold="5000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold6000.out" threshold="6000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold7000.out" threshold="7000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold8000.out" threshold="8000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold9000.out" threshold="9000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold10000.out" threshold="10000" sizeby="allops" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold2_si.out" threshold="2" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold3_si.out" threshold="3" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold4_si.out" threshold="4" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold5_si.out" threshold="5" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold10_si.out" threshold="10" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold50_si.out" threshold="50" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold100_si.out" threshold="100" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold250_si.out" threshold="250" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold400_si.out" threshold="400" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold500_si.out" threshold="500" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold600_si.out" threshold="600" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold700_si.out" threshold="700" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold750_si.out" threshold="750" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold800_si.out" threshold="800" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold900_si.out" threshold="900" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold1000_si.out" threshold="1000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold1500_si.out" threshold="1500" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold2000_si.out" threshold="2000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold3000_si.out" threshold="3000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold4000_si.out" threshold="4000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold5000_si.out" threshold="5000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold6000_si.out" threshold="6000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold7000_si.out" threshold="7000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold8000_si.out" threshold="8000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold9000_si.out" threshold="9000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="ROOT_THRESHOLD" bufsize="17000" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_rthreshold10000_si.out" threshold="10000" sizeby="insertions" 
                          updatepiggybackingepsilon="@{epsilon}"/>

            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2.out" threshold="2" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5.out" threshold="5" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10.out" threshold="10" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15.out" threshold="15" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2.out" threshold="2" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5.out" threshold="5" updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10.out" threshold="10" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15.out" threshold="15" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout20.out" threshold="20"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout25.out" threshold="25"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout30.out" threshold="30"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout40.out" threshold="40"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout50.out" threshold="50"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2_si.out" threshold="2" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5_si.out" threshold="5" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10_si.out" threshold="10" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15_si.out" threshold="15" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout2_si.out" threshold="2" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout5_si.out" threshold="5" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout10_si.out" threshold="10" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout15_si.out" threshold="15" 
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout20_si.out" threshold="20"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout25_si.out" threshold="25"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout30_si.out" threshold="30"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout40_si.out" threshold="40"
                          updatepiggybackingepsilon="@{epsilon}"/>
            <verbose-tree input="@{input.path}/@{input}" inputqueries="${spf.queries}" queryratio="1000" pushdownstrategy="LEAF_THRESHOLD_TIMES_FANOUT" bufsize="17000" sizeby="insertions" tree="UPDATE_RR_TREE"
                          output.dir="@{output.path}" output="@{input}_thresholdtimesfanout50_si.out" threshold="50"
                          updatepiggybackingepsilon="@{epsilon}"/>
        </parallel>
        </sequential>
    </macrodef>

   <macrodef name="top-3-workload-duration-exp-spf">
        <attribute name="input"/>
        <attribute name="input.path"/>
        <attribute name="output.path"/>
        <attribute name="outputsuffix"/>
        <sequential>
            <parallel threadCount="4">
                <run-workload-duration input.dir="@{input.path}" input="@{input}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"
				       groupsizecoeff="1.6"
				       output="${rr-tree-exp.root}/workload_duration_@{outputsuffix}_BUF_LARGEST_DIV_BY_CONST1_6_si.out"/>
                <run-workload-duration input="${spf.path}/@{input}" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT"
                                       groupsizecoeff="0.7" sizeby="allops"
                                       output="${rr-tree-exp.root}/workload_duration_@{outputsuffix}_buflargestdivfanout0_7.out"/>
                <run-workload-duration input="${spf.path}/@{input}" pushdownstrategy="ROOT_THRESHOLD" threshold="750"
                                       output="${rr-tree-exp.root}/workload_duration_@{outputsuffix}_rthreshold750_si.out"/>
            </parallel>
        </sequential>
    </macrodef>

   <macrodef name="top-3-workload-duration-exp-uniform">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output.dir"/>
        <attribute name="outputsuffix"/>
        <sequential>
            <parallel threadCount="5">
                <run-workload-duration input.dir="@{input.dir}" input="@{input}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" sizeby="allops"
				       groupsizecoeff="0.9" output.dir="@{output.dir}" bufsize="17000"
				       output="workload_duration_@{outputsuffix}_BUF_LARGEST_DIV_BY_CONST0_9.out"/>

                <run-workload-duration input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"
                                       groupsizecoeff="1.2" bufsize="17000"
                                       output="workload_duration_@{outputsuffix}_BUF_LARGEST_DIV_BY_CONST1_2_si.out"/>

                <run-workload-duration input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT"
                                       groupsizecoeff="1.2" sizeby="allops" bufsize="17000"
                                       output="workload_duration_@{outputsuffix}_buflargestdivfanout1_2.out"/>

                <run-workload-duration input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT"
                                       groupsizecoeff="1.1" bufsize="17000"
                                       output="workload_duration_@{outputsuffix}_buflargestdivfanout1_1_si.out"/>

                <run-workload-duration input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST" 
                                       bufsize="17000"
                                       output="workload_duration_@{outputsuffix}_buflargest_si.out"/>

            </parallel>
        </sequential>
    </macrodef>

    <macrodef name="verbose-tree-with-rootgsizes">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output.dir"/>
        <attribute name="tree" default="RR_TREE"/>
        <attribute name="pushdownstrategy"/>
        <attribute name="bufsize"/>
        <attribute name="groupsizecoeff" default="1.0"/>
        <attribute name="threshold" default="1"/>
	<attribute name="sizeby" default="insertions"/>
        <attribute name="gcinterval" default="5000"/>
        <attribute name="updateindexpiggybacking"/>
        <attribute name="updateleafpiggybacking"/>
        <attribute name="querypiggybacking"/>
        <attribute name="outsuffix"/>
        <sequential>
            <verbose-tree input="@{input.dir}/@{input}.out" 
                          tree="@{tree}"
                          pushdownstrategy="@{pushdownstrategy}" bufsize="@{bufsize}"
                          groupsizecoeff="@{groupsizecoeff}" output.dir="@{output.dir}" output="@{input}_@{outsuffix}.out"
                          threshold="@{threshold}" sizeby="@{sizeby}" gcinterval="@{gcinterval}"
                          updateindexpiggybacking="@{updateindexpiggybacking}"
                          updateleafpiggybacking="@{updateleafpiggybacking}"
                          querypiggybacking="@{querypiggybacking}"
                          otherarg="--outputrootgsizes=@{input}_@{outsuffix}.rootgsizes"/>
        </sequential>
    </macrodef>

    <macrodef name="top-3-strategies-spf">
        <attribute name="input"/>
        <attribute name="output.dir"/>
        <attribute name="bufsize"/>
        <attribute name="updateindexpiggybacking" default=""/>
        <attribute name="updateleafpiggybacking" default=""/>
        <attribute name="querypiggybacking" default=""/>
        <sequential>
          <mkdir dir="@{output.dir}"/>
            <parallel threadCount="4">
            <verbose-tree-with-rootgsizes input="@{input}" input.dir="${spf.path}"
                                          output.dir="@{output.dir}"
                                          pushdownstrategy="EVERYTHING" bufsize="@{bufsize}"
                                          outsuffix="EVERYTHING"
                                          updateindexpiggybacking="@{updateindexpiggybacking}"
                                          updateleafpiggybacking="@{updateleafpiggybacking}"
                                          querypiggybacking="@{querypiggybacking}"/>
            <verbose-tree-with-rootgsizes input="@{input}" input.dir="${spf.path}"
                                          output.dir="@{output.dir}"
                                          pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                          bufsize="@{bufsize}"
                                          groupsizecoeff="1.6" 
                                          outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si"
                                          updateindexpiggybacking="@{updateindexpiggybacking}"
                                          updateleafpiggybacking="@{updateleafpiggybacking}"
                                          querypiggybacking="@{querypiggybacking}"/>
            <verbose-tree-with-rootgsizes input="@{input}" input.dir="${spf.path}" 
                                          output.dir="@{output.dir}" 
                                          pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                          bufsize="@{bufsize}"
                                          outsuffix="buflargestdivfanout1_0" sizeby="allops"
                                          updateindexpiggybacking="@{updateindexpiggybacking}"
                                          updateleafpiggybacking="@{updateleafpiggybacking}"
                                          querypiggybacking="@{querypiggybacking}"/>
            <verbose-tree-with-rootgsizes input="@{input}" input.dir="${spf.path}" 
                                          output.dir="@{output.dir}"
                                          pushdownstrategy="ROOT_THRESHOLD"
                                          bufsize="@{bufsize}" threshold="750" 
                                          outsuffix="rthreshold750_si"
                                          updateindexpiggybacking="@{updateindexpiggybacking}"
                                          updateleafpiggybacking="@{updateleafpiggybacking}"
                                          querypiggybacking="@{querypiggybacking}"/>
            </parallel>
        </sequential>
    </macrodef>

    <macrodef name="top-3-strategies-uniform">
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="tree" default="RR_TREE"/>
      <attribute name="bufsize"/>
      <attribute name="gcinterval" default="0"/>
      <attribute name="updateindexpiggybacking" default=""/>
      <attribute name="updateleafpiggybacking" default=""/>
      <attribute name="querypiggybacking" default=""/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <parallel threadCount="4">
          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" 
                                        input.dir="${rr-tree-exp.root}/../datasets/"
                                        output.dir="@{output.dir}" pushdownstrategy="EVERYTHING" 
                                        sizeby="allops" bufsize="@{bufsize}" outsuffix="EVERYTHING"
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>

          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" 
                                        input.dir="${rr-tree-exp.root}/../datasets/"
                                        output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST" 
                                        sizeby="allops" bufsize="@{bufsize}" outsuffix="BUF_LARGEST"
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>

          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" input.dir="${rr-tree-exp.root}/../datasets/"
                                        output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"
                                        bufsize="@{bufsize}" groupsizecoeff="1.2" 
                                        outsuffix="BUF_LARGEST_DIV_BY_CONST1_2" 
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>

          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" input.dir="${rr-tree-exp.root}/../datasets/" 
                                        output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT"
                                        bufsize="@{bufsize}" groupsizecoeff="1.1"
                                        outsuffix="buflargestdivfanout1_1"
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>
        </parallel>
      </sequential>
    </macrodef>

<!-- TODO: outdated!
    <macrodef name="top-3-strategies-uniform-update-tree">
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="tree" default="RR_TREE"/>
      <attribute name="bufsize"/>
      <attribute name="gcinterval" default="0"/>
      <attribute name="updateindexpiggybacking" default=""/>
      <attribute name="updateleafpiggybacking" default=""/>
      <attribute name="querypiggybacking" default=""/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <parallel threadCount="4">
          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" 
                                        input.dir="${rr-tree-exp.root}/../datasets/"
                                        output.dir="@{output.dir}" pushdownstrategy="EVERYTHING" 
                                        sizeby="allops" bufsize="@{bufsize}" outsuffix="EVERYTHING"
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>

          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" 
                                        input.dir="${rr-tree-exp.root}/../datasets/"
                                        output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST" 
                                        sizeby="allops" bufsize="@{bufsize}" outsuffix="BUF_LARGEST"
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>

          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" input.dir="${rr-tree-exp.root}/../datasets/"
                                        output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"
                                        bufsize="@{bufsize}" groupsizecoeff="1.2" sizeby="allops"
                                        outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_allops" 
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>

          <verbose-tree-with-rootgsizes tree="@{tree}"
                                        input="@{input}" input.dir="${rr-tree-exp.root}/../datasets/" 
                                        output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT"
                                        bufsize="@{bufsize}" groupsizecoeff="1.1" sizeby="allops"
                                        outsuffix="buflargestdivfanout1_1_allops"
                                        gcinterval="@{gcinterval}"
                                        updateindexpiggybacking="@{updateindexpiggybacking}"
                                        updateleafpiggybacking="@{updateleafpiggybacking}"
                                        querypiggybacking="@{querypiggybacking}"/>
        </parallel>
      </sequential>
    </macrodef>
-->

    <macrodef name="run-scalability-rr">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="pushdownstrategy"/>
        <attribute name="threshold" default="1"/>
        <attribute name="groupsizecoeff" default="1.0"/>
        <attribute name="persistent" default="false"/>
	<attribute name="sizeby" default="insertions"/>
        <sequential>
            <delete file="@{output.dir}/@{output}" failonerror="no"/>
            <echo message="72 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="72" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="215 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="215" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="500 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="500" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="1000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="1000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="2000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="2000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="5000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="5000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="10000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="10000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="50000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="50000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="100000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="100000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <echo message="130000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="RR_TREE" bufsize="130000" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
            <verbose-tree tree="RR_TREE" bufsize="130000" input="@{input.dir}/@{input}.out"
                          output="verbose_@{output}" output.dir="@{output.dir}"
                          pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                          groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}"/>
        </sequential>
    </macrodef>

    <macrodef name="run-scalability-r">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="persistent" default="false"/>
        <sequential>
            <delete file="@{output.dir}/@{output}" failonerror="no"/>
	    <!-- We use RR buffer size units -->
            <echo message="72 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="1" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                persistent="@{persistent}"/>
	                <echo message="215 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="3" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}" 
                          persistent="@{persistent}"/>
            <echo message="500 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="7" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="1000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="14" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="2000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="28" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="5000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="70" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="10000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="140" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="50000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="700" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="100000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="1400" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <echo message="130000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-tree tree="rtree" cachesize="1820" input="@{input.dir}/@{input}.out" 
                          output="@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
            <verbose-tree tree="rtree" cachesize="1820" input="@{input.dir}/@{input}.out"
                          output="verbose_@{output}" output.dir="@{output.dir}"
                          persistent="@{persistent}"/>
        </sequential>
    </macrodef>

    <macrodef name="run-scalability-rum">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <sequential>
            <delete file="@{output.dir}/@{output}" failonerror="no"/>
	    <!-- We use RR buffer size units -->
            <echo message="72 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="0"/>
            <echo message="215 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="2"/>
            <echo message="500 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="6"/>
            <echo message="1000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="13"/>
            <echo message="2000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="27"/>
            <echo message="5000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="69"/>
            <echo message="10000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="139"/>
            <echo message="50000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="699"/>
            <echo message="100000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="1399"/>
            <echo message="130000 " file="@{output.dir}/@{output}" append="yes"/>
            <gnuplot-rum input="@{input.dir}/@{input}.out" output.dir="@{output.dir}" 
                         output="@{output}" cachesize="1819"/>
        </sequential>
    </macrodef>

    <macrodef name="run-lru-vs-buffer-17000">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output"/>
        <attribute name="output.dir"/>
        <attribute name="pushdownstrategy"/>
        <attribute name="threshold" default="1"/>
        <attribute name="groupsizecoeff" default="1.0"/>
	<attribute name="sizeby" default="insertions"/>
        <attribute name="tree" default="RR_TREE"/>
        <attribute name="persistent" default="false"/>
        <sequential>
          <mkdir dir="@{output.dir}"/>
          <delete file="@{output.dir}/@{output}" failonerror="no"/>
          <echo message="0.0 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="17000" cachesize="0" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.004 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="16929" cachesize="2" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.008 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="16857" cachesize="2" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.12 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="14857" cachesize="29"  input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.24 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="12750" cachesize="58"  input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.36 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="10625" cachesize="87"  input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.5 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="8500" cachesize="116" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.61 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="6375" cachesize="145" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.73 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="4250" cachesize="174" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="0.85 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" bufsize="2125" cachesize="203" input="@{input.dir}/@{input}.out" output="@{output}"
                        pushdownstrategy="@{pushdownstrategy}" threshold="@{threshold}" persistent="@{persistent}"
                        groupsizecoeff="@{groupsizecoeff}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
          <echo message="1.0 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree tree="@{tree}" cachesize="238" input="@{input.dir}/@{input}.out" output="@{output}"
                        persistent="@{persistent}" sizeby="@{sizeby}" output.dir="@{output.dir}"/>
        </sequential>
    </macrodef>

    <macrodef name="top-3-lru-vs-buffer-17000">
      <attribute name="output.dir"/>
        <attribute name="input"/>
        <sequential>
            <parallel threadCount="4">
                <run-lru-vs-buffer-17000 input="@{input}" output.dir="@{output.dir}"
                                        output="@{input}_bufvslru_BUF_LARGEST_DIV_BY_CONST1_6_si.out"
                                        pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" groupsizecoeff="1.6"/>
                <run-lru-vs-buffer-17000 input="@{input}" output.dir="@{output.dir}"
                                        output="@{input}_bufvslru_buflargestdivfanout0_7.out"
                                        pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" groupsizecoeff="0.7" sizeby="allops"/>
                <run-lru-vs-buffer-17000 input="@{input}" output.dir="@{output.dir}"
                                        output="@{input}_bufvslru_rthreshold750_si.out"
                                        pushdownstrategy="ROOT_THRESHOLD" threshold="750"/>
            </parallel>
        </sequential>
    </macrodef>

    <macrodef name="top-3-lru-vs-buffer-17000-uniform">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <sequential>
        <parallel threadCount="4">
                <run-lru-vs-buffer-17000 input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}"
                                        output="@{input}_bufvslru_buflargest.out"
                                        pushdownstrategy="BUF_LARGEST" sizeby="allops"/>
                <run-lru-vs-buffer-17000 input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}"
                                        output="@{input}_bufvslru_BUF_LARGEST_DIV_BY_CONST1_2_si.out"
                                        pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" groupsizecoeff="1.2"/>
                <run-lru-vs-buffer-17000 input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}"
                                        output="@{input}_bufvslru_buflargestdivfanout1_1_si.out"
                                        pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" groupsizecoeff="1.1"/>
        </parallel> 
      </sequential>
    </macrodef>

    <macrodef name="top-lru-vs-buffer-17000-uniform-update-tree">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <sequential>
        <run-lru-vs-buffer-17000 tree="UPDATE_RR_TREE" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                 input="@{input}"
                                 output="@{input}_bufvslru_rthreshold700.out"
                                 pushdownstrategy="ROOT_THRESHOLD" threshold="700" sizeby="allops"/>
      </sequential>
    </macrodef>

    <target name="buf-vs-lru-exp" description="Runs the buffer vs LRU experiment">
      <sequential>
        <parallel threadCount="4">
          <top-3-lru-vs-buffer-17000 input="spf28mod1t10m5qu10000" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-buf-vs-lru-qu10000"/>
          <top-3-lru-vs-buffer-17000 input="spf28mod1t10m5qu1" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-buf-vs-lru-qu1"/>
        </parallel>
      </sequential>
    </target>

    <target name="buf-vs-lru-uniform-exp" description="Runs the buffer vs LRU experiment on uniform data">
      <sequential>
        <parallel threadCount="4">
          <top-3-lru-vs-buffer-17000-uniform input.dir="../datasets" input="uniform5qu10000" 
                                             output.dir="${rr-tree-exp.root}/../rr-tree-output/uniform-buf-vs-lru-qu10000"/>
          <top-3-lru-vs-buffer-17000-uniform input.dir="../datasets" input="uniform5qu1" 
                                             output.dir="${rr-tree-exp.root}/../rr-tree-output/uniform-buf-vs-lru-qu1"/>
        </parallel>
      </sequential>
    </target>

    <target name="buf-vs-lru-uniform-update-tree-exp">
      <sequential>
        <top-lru-vs-buffer-17000-uniform-update-tree input.dir="../datasets" input="uniform1"
                                                     output.dir="../rr-tree-output/uniform1.buf-vs-lru-17000-update-tree"/>
      </sequential>
    </target>

    <macrodef name="run-buf-vs-lru-gc">
      <attribute name="input.path"/>
      <attribute name="input"/>
      <attribute name="gc"/>
      <attribute name="gcindexcache"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"/>
        <parallel threadCount="4">

          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="17000" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb" 
                        output="@{input}_17000.out" gc="@{gc}"
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="16929" cachesize="2" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb" 
                        output="@{input}_16929.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="16857" cachesize="2" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_16857.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="14857" cachesize="29" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_14857.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="12750" cachesize="58" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_12750.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="10625" cachesize="87" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_10625.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="8500" cachesize="116" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_08500.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="6375" cachesize="145" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_06375.out" gc="@{gc}" 
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="4250" cachesize="174" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_04250.out" gc="@{gc}"
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="2125" cachesize="203" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_02125.out" gc="@{gc}"
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>

          <verbose-tree input="@{input.path}/@{input}" pushdownstrategy="THRESHOLD" bufsize="1" cachesize="238" sizeby="allops" tree="UPDATE_RR_TREE"
                        output.dir="../rr-tree-output/@{input}_buf-vs-lru-threshold7000-e-0.3-gc-@{gc}-gic-@{gcindexcache}-disk-size-2.0-gcfulleb"
                        output="@{input}_00000.out" gc="@{gc}"
                        threshold="7000" updatepiggybackingepsilon="0.3" gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}"  gcdisksize="2.0"/>
        </parallel>
      </sequential>
    </macrodef>
    
    <target name="medium-spf-buf-vs-lru-gc">
      <run-buf-vs-lru-gc input.path="${spf.path}" input="spf28mod1t10m3.out"/>
    </target>

    <target name="medium-uniform-buf-vs-lru-gc">
      <run-buf-vs-lru-gc input.path="../datasets" input="uniform3.out"/>
    </target>

    <target name="spf-buf-vs-lru-gc">
      <run-buf-vs-lru-gc input.path="${spf.path}" input="spf28mod1t10m5.out"/>
    </target>

    <target name="uniform-buf-vs-lru-gc">
      <run-buf-vs-lru-gc input.path="../datasets" input="uniform5.out"/>
    </target>

    <target name="spf-buf-vs-lru-gc-rebuild-disk">
      <run-buf-vs-lru-gc input.path="${spf.path}" input="spf28mod1t10m5.out" gc="REBUILD" gcindexcache="0"/>
    </target>

    <target name="uniform-buf-vs-lru-gc-rebuild-disk">
      <run-buf-vs-lru-gc input.path="../datasets" input="uniform5.out" gc="REBUILD" gcindexcache="0"/>
    </target>

    <target name="spf-buf-vs-lru-gc-rebuild-disk-gcfulleb">
      <run-buf-vs-lru-gc input.path="${spf.path}" input="spf28mod1t10m5.out" gc="REBUILD" gcindexcache="0"/>
    </target>

    <target name="uniform-buf-vs-lru-gc-rebuild-disk-gcfulleb">
      <run-buf-vs-lru-gc input.path="../datasets" input="uniform5.out" gc="REBUILD" gcindexcache="0"/>
    </target>

    <macrodef name="run-scalability-exp-spf">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output.dir"/>
        <sequential>
          <mkdir dir="@{output.dir}"/>
          <parallel threadCount="4">
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" groupsizecoeff="1.6"
                                output="@{input}_buflargestdivfanout1_6_si.rr"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" groupsizecoeff="1.0"
                                output="@{input}_buflargestdivfanout1_0.rr"
                                sizeby="allops"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="ROOT_THRESHOLD" threshold="750"
                                output="@{input}_rthreshold750_si.rr"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST"
                                output="@{input}_buflargest_si.rr"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST" sizeby="allops"
                                output="@{input}_buflargest.rr"/>
            <run-scalability-r input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" 
                               output="@{input}_scalability.r"/>
            <run-scalability-rum input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" 
                                 output="@{input}_scalability.rum"/>
          </parallel>
        </sequential>
    </macrodef>

    <macrodef name="run-scalability-exp-uniform">
        <attribute name="input"/>
        <attribute name="input.dir"/>
        <attribute name="output.dir"/>
        <sequential>
          <mkdir dir="@{output.dir}"/>
          <parallel threadCount="4">
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" groupsizecoeff="0.9"
                                sizeby="allops"
                                output="@{input}_BUF_LARGEST_DIV_BY_CONST0_9.rr"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" groupsizecoeff="1.2"
                                output="@{input}_buflargestdivfanout1_2_si.rr"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST"
                                output="@{input}_buflargest_si.rr"/>
            <run-scalability-rr input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}"
                                pushdownstrategy="BUF_LARGEST" sizeby="allops"
                                output="@{input}_buflargest.rr"/>
            <run-scalability-r input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" 
                               output="@{input}_scalability.r"/>
            <run-scalability-rum input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" 
                                 output="@{input}_scalability.rum"/>
          </parallel>
        </sequential>
    </macrodef>

    <target name="scalability-exp">
      <parallel threadCount="2">
        <run-scalability-exp-spf input="spf28mod1t10m1" input.dir="${spf.path}" 
                                 output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-scalability"/>
        <run-scalability-exp-uniform input="uniform1" input.dir="${rr-tree-exp.root}/../datasets"
                                     output.dir="${rr-tree-exp.root}/../rr-tree-output/uniform-scalability"/>
      </parallel>
    </target>

    <target name="top-3-verbose-spf">
        <parallel threadCount="1">
<!--            <top-3-strategies-spf input="spf28mod1t10m1" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes"
                                  bufsize="17000"/> -->
            <top-3-strategies-spf input="spf28mod1t10m6" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes" 
                                  bufsize="17000"/>
            <top-3-strategies-spf input="spf28mod1t1km1" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes" 
                                  bufsize="17000"/>
            <top-3-strategies-spf input="spf28mod1t1km6" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes" 
                                  bufsize="17000"/>
        </parallel>
    </target>

    <target name="top-3-verbose-spf-leaf-piggybacking-only">
        <parallel threadCount="1">
<!--            <top-3-strategies-spf input="spf28mod1t10m1" output.dir="${rr-tree-exp.root}/../rr-tree-output-leaf-pback/spf-top-3-with-root-group-sizes"
                                  bufsize="17000" updateindexpiggybacking="- -disableupdateindexpiggybacking"/> -->
            <top-3-strategies-spf input="spf28mod1t10m6" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-rgroups-leaf-piggybacking" 
                                  bufsize="17000" updateindexpiggybacking="--disableupdateindexpiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t1km1" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-rgroups-leaf-piggybacking" 
                                  bufsize="17000" updateindexpiggybacking="--disableupdateindexpiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t1km6" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-rgroups-leaf-piggybacking" 
                                  bufsize="17000" updateindexpiggybacking="--disableupdateindexpiggybacking"/>
        </parallel>
    </target>

    <target name="top-3-verbose-spf-index-piggybacking-only">
        <parallel threadCount="1">
<!--            <top-3-strategies-spf input="spf28mod1t10m1" output.dir="${rr-tree-exp.root}/../rr-tree-output-leaf-pback/spf-top-3-with-root-group-sizes"
                                  bufsize="17000" updateindexpiggybacking="- -disableupdateindexpiggybacking"/> -->
            <top-3-strategies-spf input="spf28mod1t10m6" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-rgroups-index-piggybacking" 
                                  bufsize="17000" updateleafpiggybacking="--disableupdateleafpiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t1km1" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-rgroups-index-piggybacking" 
                                  bufsize="17000" updateleafpiggybacking="--disableupdateleafpiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t1km6" output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-rgroups-index-piggybacking" 
                                  bufsize="17000" updateleafpiggybacking="--disableupdateleafpiggybacking"/>
        </parallel>
    </target>

    <target name="top-3-verbose-spf-no-query-piggybacking">
        <parallel threadCount="1">
            <top-3-strategies-spf input="spf28mod1t10m1" 
                                  output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes-no-query-piggybacking" 
                                  bufsize="17000" querypiggybacking="--disablequerypiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t10m6" 
                                  output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes-no-query-piggybacking" 
                                  bufsize="17000" querypiggybacking="--disablequerypiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t1km1" 
                                  output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes-no-query-piggybacking" 
                                  bufsize="17000" querypiggybacking="--disablequerypiggybacking"/>
            <top-3-strategies-spf input="spf28mod1t1km6" 
                                  output.dir="${rr-tree-exp.root}/../rr-tree-output/spf-top-3-with-root-group-sizes-no-query-piggybacking" 
                                  bufsize="17000" querypiggybacking="--disablequerypiggybacking"/>
        </parallel>
    </target>

    <target name="top-3-verbose-uniform">
      <parallel threadCount="1">
        <top-3-strategies-uniform 
            input="uniform1"
            output.dir="${rr-tree-exp.root}/../rr-tree-output/uniform-top-3-with-root-group-sizes" 
            bufsize="17000"/>
      </parallel>
    </target>

    <target name="top-3-verbose-uniform3-delins">
        <top-3-strategies-uniform bufsize="17000" input="uniform3"
                                  output.dir="../rr-tree-output/uniform3"/>
        <top-3-strategies-uniform bufsize="17000" input="uniform-delins3"
                                  output.dir="../rr-tree-output/uniform-delins3"/>
        <top-3-strategies-uniform bufsize="17000" input="uniform-delins3"
                                  output.dir="../rr-tree-output/uniform-delins3-no-index-piggybacking"  
                                  updateindexpiggybacking="--disableupdateindexpiggybacking"/>
        <top-3-strategies-uniform bufsize="17000" input="uniform-delins3"
                                  output.dir="../rr-tree-output/uniform-delins3-no-leaf-piggybacking"
                                  updateleafpiggybacking="--disableupdateleafpiggybacking"/>
        <top-3-strategies-uniform bufsize="17000" input="uniform-delins3"
                                  output.dir="../rr-tree-output/uniform-delins3-no-piggybacking"
                                  updateindexpiggybacking="--disableupdateindexpiggybacking"
                                  updateleafpiggybacking="--disableupdateleafpiggybacking"/>
    </target>

    <target name="top-3-verbose-uniform1-delins">
        <top-3-strategies-uniform bufsize="17000" input="uniform1"
                                  output.dir="../rr-tree-output/uniform1"                                  
                                  updateindexpiggybacking="--disableupdateindexpiggybacking"
                                  updateleafpiggybacking="--disableupdateleafpiggybacking"/>
        <top-3-strategies-uniform bufsize="17000" input="uniform-delins1"
                                  output.dir="../rr-tree-output/uniform-delins1"
                                  updateindexpiggybacking="--disableupdateindexpiggybacking"
                                  updateleafpiggybacking="--disableupdateleafpiggybacking"/>
    </target>

    <target name="top-3-verbose" 
            depends="top-3-verbose-uniform,top-3-verbose-uniform-no-query-piggybacking,top-3-verbose-spf,top-3-verbose-spf-no-query-piggybacking"/>

    <target name="top-3-verbose-uniform-no-query-piggybacking">
      <parallel threadCount="1">
        <top-3-strategies-uniform input="uniform1"  bufsize="17000"
                 output.dir="${rr-tree-exp.root}/../rr-tree-output/uniform-top-3-with-root-group-sizes-no-query-piggybacking"
                 querypiggybacking="--disablequerypiggybacking"/>
      </parallel>
    </target>

    <macrodef name="run-update-tree-gc-interval-tput">
      <attribute name="input.path"/>
      <attribute name="input"/>
      <attribute name="epsilon"/>
      <attribute name="gc"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval"/>
        <parallel threadCount="4">
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-0.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="0" gc="@{gc}" inputqueries="${spf.queries}"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-1.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="1" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-2.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="2" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-5.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="5" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-10.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="10" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-20.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="20" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-50.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="50" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-100.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="100" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-200.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="200" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-250.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="250" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-300.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="300" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-350.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="350" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-400.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="400" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-450.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="450" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-500.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="500" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-1000.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="1000" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-interval" output="@{input}_rthreshold250-gc-5000.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="5000" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
        </parallel>
      </sequential>
    </macrodef>

    <macrodef name="run-update-tree-gc-interval-latency">
      <attribute name="input.path"/>
      <attribute name="input"/>
      <attribute name="epsilon"/>
      <attribute name="gc"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval"/>
        <parallel threadCount="4">
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-0.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="0" gc="@{gc}" inputqueries="${spf.queries}"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-1.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="1" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-2.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="2" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-5.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="5" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-10.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="10" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-20.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="20" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-50.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="50" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-100.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="100" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-200.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="200" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-250.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="250" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-300.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="300" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-350.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="350" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-400.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="400" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-450.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="450" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-500.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="500" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-1000.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="1000" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" 
                        output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-interval" output="@{input}_threshold4-gc-5000.out" 
                        updatepiggybackingepsilon="@{epsilon}" gcinvocation="INTERVAL" gcinterval="5000" gc="@{gc}" inputqueries="${spf.queries}" queryratio="1000"/>
        </parallel>
      </sequential>
    </macrodef>

    <macrodef name="run-update-tree-gc-disk-size-latency">
      <attribute name="input.path"/>
      <attribute name="input"/>
      <attribute name="epsilon"/>
      <attribute name="gc"/>
      <attribute name="gcindexcache" default="0"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"/>
        <parallel threadCount="4">

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-1.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="1.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-2.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="2.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-2.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="2.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-3.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="3.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-3.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="3.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-4.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="4.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-4.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="4.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-5.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="5.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-5.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="5.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-6.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="6.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-6.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="6.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-7.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="7.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-7.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="7.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-8.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="8.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-8.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="8.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-9.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="9.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-9.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="9.5"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-10.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="10.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-11.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="11.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-12.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="12.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-13.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="13.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-14.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="14.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-15.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="15.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-16.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="16.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-17.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="17.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-18.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="18.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-19.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="19.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-20.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="20.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-21.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="21.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-22.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="22.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-23.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="23.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-24.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="24.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-25.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="25.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-26.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="26.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-27.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="27.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-28.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="28.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-29.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="29.0"/>

          <verbose-tree-best-spf-latency-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_threshold4-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_threshold4-gc-@{gc}-30.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="30.0"/>
        </parallel>
      </sequential>
    </macrodef>

    <macrodef name="run-update-tree-gc-disk-size-tput">
      <attribute name="input.path"/>
      <attribute name="input"/>
      <attribute name="epsilon"/>
      <attribute name="gc"/>
      <attribute name="gcindexcache" default="0"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"/>
        <parallel threadCount="4">

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-1.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="1.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-2.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="2.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-2.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="2.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-3.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="3.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-3.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="3.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-4.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="4.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-4.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="4.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-5.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="5.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-5.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="5.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-6.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="6.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-6.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="6.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-7.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="7.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-7.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="7.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-8.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="8.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-8.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="8.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-9.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="9.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-9.5.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="9.5"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-10.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="10.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-11.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="11.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-12.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="12.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-13.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="13.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-14.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="14.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-15.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="15.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-16.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="16.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-17.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="17.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-18.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="18.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-19.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="19.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-20.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="20.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-21.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="21.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-22.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="22.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-23.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="23.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-24.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="24.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-25.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="25.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-26.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="26.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-27.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="27.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-28.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="28.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-29.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="29.0"/>

          <verbose-tree-best-spf-tput-1 input="@{input.path}/@{input}" gc="@{gc}"
                                           output.dir="../rr-tree-output/@{input}_rthreshold250-e-@{epsilon}-gc-@{gc}-gic-@{gcindexcache}-disk-size"
                                           output="@{input}_rthreshold250-gc-@{gc}-30.0.out" updatepiggybackingepsilon="@{epsilon}" 
                                           gcinvocation="DISK_SIZE" gcindexcache="@{gcindexcache}" gcdisksize="30.0"/>
        </parallel>
      </sequential>
    </macrodef>


    <target name="update-tree-uniform-e-0.3-gc-interval">
      <run-update-tree-gc-interval input.path="../datasets" input="uniform5.out" epsilon="0.3" gc="VACUUM"/>
    </target>

    <target name="update-tree-spf-gc-interval">
      <run-update-tree-gc-interval-tput input.path="${spf.path}" input="spf32mod1t10m1.out" epsilon="5.0" gc="VACUUM"/>
      <run-update-tree-gc-interval-latency input.path="${spf.path}" input="spf32mod1t10m1.out" epsilon="0.0" gc="VACUUM"/>
    </target>

    <target name="update-tree-uniform-short-e-0.3-gc-disk-size">
      <run-update-tree-gc-disk-size input.path="../datasets" input="uniform5.out" epsilon="0.3" gc="VACUUM"/>
    </target>

    <target name="update-tree-uniform-short-e-0.3-gc-tree-rebuild-disk-size">
      <run-update-tree-gc-disk-size input.path="../datasets" input="uniform5.out" epsilon="0.3" gc="REBUILD" gcindexcache="0"/>
    </target>

    <target name="update-tree-spf-medium-e-0.3-gc-disk-size">
      <run-update-tree-gc-disk-size input.path="${spf.path}" input="spf28mod1t10m3.out" epsilon="0.3" gc="VACUUM"/>
    </target>

    <target name="update-tree-uniform-medium-e-0.3-gc-disk-size">
      <run-update-tree-gc-disk-size input.path="../datasets" input="uniform3.out" epsilon="0.3" gc="VACUUM"/>
    </target>

    <target name="update-tree-spf-short-e-0.3-gc-disk-size">
      <run-update-tree-gc-disk-size input.path="${spf.path}" input="spf28mod1t10m5.out" epsilon="0.3" gc="VACUUM" gcindexcache="0"/>
    </target>

    <target name="update-tree-spf-short-e-0.3-gc-tree-rebuild-disk-size">
      <run-update-tree-gc-disk-size input.path="${spf.path}" input="spf28mod1t10m5.out" epsilon="0.3" gc="REBUILD" gcindexcache="0"/>
    </target>

    <target name="update-tree-uniform-medium-e-0.3-gc-tree-rebuild-disk-size">
      <run-update-tree-gc-disk-size input.path="../datasets" input="uniform3.out" epsilon="0.3" gc="REBUILD"/>
    </target>

    <target name="update-tree-spf-medium-e-0.3-gc-tree-rebuild-disk-size">
      <run-update-tree-gc-disk-size input.path="${spf.path}" input="spf28mod1t10m3.out" epsilon="0.3" gc="REBUILD"/>
    </target>

    <target name="update-tree-uniform-long-e-0.3-gc-tree-rebuild-disk-size">
      <run-update-tree-gc-disk-size input.path="../datasets" input="uniform1.out" epsilon="0.3" gc="REBUILD"/>
    </target>

    <target name="update-tree-spf-gc-tree-rebuild-disk-size">
      <run-update-tree-gc-disk-size-tput input.path="${spf.path}" input="spf32mod1t10m1.out" epsilon="5.0" gc="REBUILD"/>
      <run-update-tree-gc-disk-size-latency input.path="${spf.path}" input="spf32mod1t10m1.out" epsilon="0.0" gc="REBUILD"/>
    </target>

    <target name="full-pushdown-strategy-exp">
        <sequential>
            <run-pushdown-strategy input.path="${spf.path}" input="spf28mod1t10m3.out"/>
        </sequential>
    </target>

<!-- TODO
    <target name="spf-verbose" description="Representative verbose outputs for selected SPF runs">
        <parallel threadCount="4">
            <run-tree  tree="RR_TREE" bufsize="17000" cachesize="0" input="${spf.path}/spf20mod1t10m1.out"
                          output="${rr-tree-exp.root}/spf20mod1t10m1_BUF_LARGEST_DIV_BY_CONST1_1_si_verbose.out"
                          pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" groupsizecoeff="1.1"/>
            <run-tree  tree="RR_TREE" bufsize="17000" cachesize="0" input="${spf.path}/spf20mod1t10m1.out"
                          output="${rr-tree-exp.root}/spf20mod1t10m1_buflargestdivfanout0_95_si_verbose.out"
                          pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" groupsizecoeff="0.95"/>
            <run-tree  tree="RR_TREE" bufsize="17000" cachesize="0" input="${spf.path}/spf20mod1t10m1.out"
                          output="${rr-tree-exp.root}/spf20mod1t10m1_rthreshold400_si_verbose.out"
                          pushdownstrategy="ROOT_THRESHOLD" threshold="400"/>
            <run-tree  tree="RR_TREE" bufsize="17000" cachesize="0" input="${spf.path}/spf20mod1t10m1.out"
                          output="${rr-tree-exp.root}/spf20mod1t10m1_everything_verbose.out"
                          pushdownstrategy="EVERYTHING"/>
        </parallel>
    </target> -->

    <target name="strategy-ladder-uniform-data-tree" depends="exp-driver.make">
        <sequential>
	  <mkdir dir="../rr-tree-output/uniform5.data-data-tree"/>
	  <run-pushdown-strategy-data-tree input.path="../datasets/" input="uniform5.out" 
                                           output.path="../rr-tree-output/uniform5.data-data-tree"/>
        </sequential>
    </target>

    <target name="strategy-ladder-uniform-data-tree-no-piggybacking">
        <sequential>
	  <mkdir dir="../rr-tree-output/uniform5.data-tree-no-piggybacking"/>
	  <run-pushdown-strategy-data-tree input.path="../datasets/" input="uniform5.out" 
                                           output.path="../rr-tree-output/uniform5.data-tree-no-piggybacking"
                                           updateindexpiggybacking="--disableupdateindexpiggybacking"
                                           updateleafpiggybacking="--disableupdateleafpiggybacking"/>
        </sequential>
    </target>


    <target name="strategy-ladder-uniform-update-tree">
      <sequential>
        <mkdir dir="../rr-tree-output/uniform5.data-update-tree"/>
	  <run-pushdown-strategy-update-tree input.path="../datasets/" input="uniform5.out" 
                                             output.path="../rr-tree-output/uniform5.data-update-tree"/>
      </sequential>
    </target>

    <target name="strategy-ladder-uniform-update-tree-epsilon-0.3">
      <sequential>
        <mkdir dir="../rr-tree-output/uniform5.data-update-tree-epsilon-0.3"/>
	  <run-pushdown-strategy-update-tree input.path="../datasets/" input="uniform5.out" 
                                             output.path="../rr-tree-output/uniform5.data-update-tree-epsilon-0.3"
                                             epsilon="0.3"/>
      </sequential>
    </target>

    <target name="strategy-ladder-spf-data-tree" depends="exp-driver.make">
      <sequential>
        <mkdir dir="../rr-tree-output/spf32mod1t10m3-data-tree"/>
        <run-pushdown-strategy-data-tree input.path="${spf.path}" input="spf32mod1t10m3.out"
                                         output.path="../rr-tree-output/spf32mod1t10m3-data-tree/"/>
      </sequential>
    </target>

    <target name="strategy-ladder-spf-update-tree">
      <sequential>
        <mkdir dir="../rr-tree-output/spf32mod1t10m5-update-tree"/>
        <run-pushdown-strategy-update-tree input.path="${spf.path}" input="spf32mod1t10m5.out"
                                           output.path="../rr-tree-output/spf32mod1t10m5-update-tree/"/>
      </sequential>
    </target>

    <target name="strategy-ladder-spf-update-tree-epsilon-0.3">
      <sequential>
        <mkdir dir="../rr-tree-output/spf28mod1t10m5-update-tree-epsilon-0.3"/>
        <run-pushdown-strategy-update-tree input.path="${spf.path}" input="spf28mod1t10m5.out"
                                           output.path="../rr-tree-output/spf28mod1t10m5-update-tree-epsilon-0.3/"
                                           epsilon="0.3"/>
      </sequential>
    </target>

    <macrodef name="run-epsilon-best-spf-tput-1">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1"/>
        <parallel threadCount="4">
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e00.out"
                                        updatepiggybackingepsilon="0.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e0025.out"
                                        updatepiggybackingepsilon="0.025"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e005.out"
                                        updatepiggybackingepsilon="0.05"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e0075.out"
                                        updatepiggybackingepsilon="0.075"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e01.out"
                                        updatepiggybackingepsilon="0.1"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e02.out"
                                        updatepiggybackingepsilon="0.2"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e03.out"
                                        updatepiggybackingepsilon="0.3"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e04.out"
                                        updatepiggybackingepsilon="0.4"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e05.out"
                                        updatepiggybackingepsilon="0.5"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e06.out"
                                        updatepiggybackingepsilon="0.6"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e07.out"
                                        updatepiggybackingepsilon="0.7"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e08.out"
                                        updatepiggybackingepsilon="0.8"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e09.out"
                                        updatepiggybackingepsilon="0.9"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e10.out"
                                        updatepiggybackingepsilon="1.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e20.out"
                                        updatepiggybackingepsilon="2.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e30.out"
                                        updatepiggybackingepsilon="3.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e40.out"
                                        updatepiggybackingepsilon="4.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e50.out"
                                        updatepiggybackingepsilon="5.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e70.out"
                                        updatepiggybackingepsilon="7.0"/>
          <verbose-tree-best-spf-tput-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-tput-1" 
                                        output="@{input}_rthreshold250_si_e100.out"
                                        updatepiggybackingepsilon="10.0"/>
        </parallel>
      </sequential>
    </macrodef>

    <macrodef name="run-epsilon-best-spf-latency-1">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <sequential>
        <mkdir dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1"/>
        <parallel threadCount="4">
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e00.out"
                                        updatepiggybackingepsilon="0.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e0025.out"
                                        updatepiggybackingepsilon="0.025"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e005.out"
                                        updatepiggybackingepsilon="0.05"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e0075.out"
                                        updatepiggybackingepsilon="0.075"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e01.out"
                                        updatepiggybackingepsilon="0.1"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e02.out"
                                        updatepiggybackingepsilon="0.2"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e03.out"
                                        updatepiggybackingepsilon="0.3"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e04.out"
                                        updatepiggybackingepsilon="0.4"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e05.out"
                                        updatepiggybackingepsilon="0.5"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e06.out"
                                        updatepiggybackingepsilon="0.6"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e07.out"
                                        updatepiggybackingepsilon="0.7"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e08.out"
                                        updatepiggybackingepsilon="0.8"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e09.out"
                                        updatepiggybackingepsilon="0.9"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e10.out"
                                        updatepiggybackingepsilon="1.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e20.out"
                                        updatepiggybackingepsilon="2.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e30.out"
                                        updatepiggybackingepsilon="3.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e40.out"
                                        updatepiggybackingepsilon="4.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e50.out"
                                        updatepiggybackingepsilon="5.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e70.out"
                                        updatepiggybackingepsilon="7.0"/>
          <verbose-tree-best-spf-latency-1 input="@{input.dir}/@{input}" 
                                        output.dir="../rr-tree-output/@{input}.epsilon-UPDATE_RR_TREE-latency-1" 
                                        output="@{input}_rthreshold250_si_e100.out"
                                        updatepiggybackingepsilon="10.0"/>
        </parallel>
      </sequential>
    </macrodef>

    <target name="piggybacking-epsilon-uniform-data-tree">
      <sequential>
        <run-epsilon tree="RR_TREE" input.dir="../datasets" input="uniform5.out"/>
      </sequential>
    </target>
        
    <target name="piggybacking-epsilon-spf-data-tree">
      <sequential>
        <run-epsilon tree="RR_TREE" input.dir="${spf.path}" input="spf28mod1t10m5.out"/>
      </sequential>
    </target>

    <target name="piggybacking-epsilon-uniform-update-tree">
      <sequential>
        <run-epsilon tree="UPDATE_RR_TREE" input.dir="../datasets" input="uniform5.out"/>
      </sequential>
    </target>
        
    <target name="piggybacking-epsilon-spf-update-tree">
      <sequential>
        <run-epsilon-best-spf-tput-1 input.dir="${spf.path}" input="spf32mod1t10m1.out"/>
        <run-epsilon-best-spf-latency-1 input.dir="${spf.path}" input="spf32mod1t10m1.out"/>
      </sequential>
    </target>

    <target name="workload-duration-uniform" 
            description="Runs the workload duration experiments">
      <mkdir dir="${rr-tree-exp.root}/../rr-tree-output/uniform-workload-duration"/>
      <top-3-workload-duration-exp-uniform input.dir="${rr-tree-exp.root}/../datasets/" input="uniform" 
                                           output.dir="${rr-tree-exp.root}/../rr-tree-output/uniform-workload-duration"
                                           outputsuffix=""/>
    </target>

    <macrodef name="run-q-u-rr">
      <attribute name="input"/>
      <attribute name="output"/>
      <attribute name="output.dir"/>
      <attribute name="sizeby" default="insertions"/>
      <attribute name="groupsizecoeff" default="1.0"/>
      <attribute name="bufsize"/>
      <attribute name="pushdownstrategy"/>
      <sequential>
          <delete file="@{output.dir}/@{output}" failonerror="no"/>
          <echo message="10000 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="1000 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_1000.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="100 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_100.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="10 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_10.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="1 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_1.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="0.1 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_01.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="0.01 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_001.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
          <echo message="0.001 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_0001.out" output.dir="@{output.dir}" output="@{output}"
                        tree="RR_TREE" bufsize="@{bufsize}" pushdownstrategy="@{pushdownstrategy}" 
                        sizeby="@{sizeby}" groupsizecoeff="@{groupsizecoeff}"/>
      </sequential>
    </macrodef>

    <macrodef name="run-q-u-lru">
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <attribute name="cachesize"/>
      <sequential>
          <delete file="@{output.dir}/@{output}" failonerror="no"/>
          <echo message="10000 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="1000 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_1000.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="100 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_100.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="10 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_10.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="1 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_1.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="0.1 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_01.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="0.01 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_001.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
          <echo message="0.001 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-tree input="@{input}_0001.out" output.dir="@{output.dir}" output="@{output}"
                        tree="rtree" cachesize="@{cachesize}"/>
      </sequential>
    </macrodef>

    <macrodef name="run-q-u-rum">
      <attribute name="input"/>
      <attribute name="output"/>
      <attribute name="output.dir"/>
      <attribute name="cachesize"/>
      <sequential>
          <delete file="@{output.dir}/@{output}" failonerror="no"/>
          <echo message="10000 " file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="1000 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_1000.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="100 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_100.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="10 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_10.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="1 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_1.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="0.1 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_01.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="0.01 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_001.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
          <echo message="0.001 "  file="@{output.dir}/@{output}" append="yes"/>
          <gnuplot-rum input="@{input}_0001.out" output.dir="@{output.dir}" output="@{output}"
                       cachesize="@{cachesize}"/>
      </sequential>
    </macrodef>

    <macrodef name="run-q-u-ratio-experiment-spf">
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <attribute name="input"/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <parallel threadCount="4">
          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_buflargest_si.rr"
                      bufsize="17000" pushdownstrategy="BUF_LARGEST"/>

          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_everything.rr"
                      bufsize="17000" pushdownstrategy="EVERYTHING"/>

          <run-q-u-lru input="@{input}" output.dir="@{output.dir}" output="@{output}.lru" cachesize="112"/>
          
          <run-q-u-rum input="@{input}" output.dir="@{output.dir}" output="@{output}.rum" cachesize="111"/>
        </parallel>
      </sequential>
    </macrodef>
          
    <macrodef name="run-q-u-ratio-experiment-uniform">
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <attribute name="input"/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <parallel threadCount="4">
          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_BUF_LARGEST_DIV_BY_CONST0_9.rr"
                      sizeby="allops" groupsizecoeff="0.9" bufsize="17000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"/>

          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_BUF_LARGEST_DIV_BY_CONST1_2_si.rr"
                      groupsizecoeff="1.2" bufsize="17000" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST"/>

          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_buflargestdivfanout1_2.rr"
                      groupsizecoeff="1.2" bufsize="17000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT" sizeby="allops"/>

          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_buflargestdivfanout1_1_si.rr"
                      groupsizecoeff="1.1" bufsize="17000" pushdownstrategy="BUF_LARGEST_DIV_BY_FANOUT"/>

          <run-q-u-rr input="@{input}" output.dir="@{output.dir}" output="@{output}_rr_buflargest_si.rr"
                      bufsize="17000" pushdownstrategy="BUF_LARGEST"/>

          <run-q-u-lru input="@{input}" output.dir="@{output.dir}" output="@{output}.lru" cachesize="112"/>
          
          <run-q-u-rum input="@{input}" output.dir="@{output.dir}" output="@{output}.rum" cachesize="111"/>
        </parallel>
      </sequential>
    </macrodef>

    <target name="q-u-ratio-experiment-uniform">
      <run-q-u-ratio-experiment-uniform input="../datasets/uniform3" output.dir="../rr-tree-output/q-u-ratio-uniform"
                                        output="uniform3"/>
    </target>

    <target name="q-u-ratio-experiment-spf">
      <run-q-u-ratio-experiment-spf input="${spf.path}/spf28mod1t10m" output.dir="../rr-tree-output/q-u-ratio-spf-10m"
                                    output="spf28mod1t10m"/>
      <run-q-u-ratio-experiment-spf input="${spf.path}/spf28mod1t1km" output.dir="../rr-tree-output/q-u-ratio-spf-1km"
                                    output="spf28mod1t1km"/>
    </target>

    <macrodef name="run-node-size-experiment-rr">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <attribute name="bufsize"/>
      <attribute name="pushdownstrategy"/>
      <attribute name="groupsizecoeff" default="1.0"/>
      <attribute name="threshold" default="1"/>
      <attribute name="sizeby" default="insertions"/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <delete file="@{output.dir}/@{output}"/>
        <echo message="&quot;0.5K&quot; " file="@{output.dir}/@{output}"/>
        <gnuplot-tree nodesize="512" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;1K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="1024" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;2K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="2048" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;4K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="4096" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;8K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="8192" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;16K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="16384" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;32K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="32768" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <echo message="&quot;65K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="65536" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="@{output}" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
        <verbose-tree nodesize="65536" input="@{input.dir}/@{input}" tree="RR_TREE" bufsize="@{bufsize}" 
                      pushdownstrategy="@{pushdownstrategy}" output="interesting.verbose.rr" output.dir="@{output.dir}" 
                      groupsizecoeff="@{groupsizecoeff}" threshold="@{threshold}" sizeby="@{sizeby}"/>
      </sequential>
    </macrodef>

    <macrodef name="run-node-size-experiment-r">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <attribute name="cachesize"/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <delete file="@{output.dir}/@{output}"/>
        <echo message="&quot;0.5K&quot; " file="@{output.dir}/@{output}"/>
        <gnuplot-tree nodesize="512" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;1K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="1024" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;2K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="2048" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;4K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="4096" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;8K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="8192" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;16K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="16384" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;32K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="32768" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <echo message="&quot;64K&quot; " file="@{output.dir}/@{output}" append="yes"/>
        <gnuplot-tree nodesize="65536" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="@{output}" output.dir="@{output.dir}"/>
        <verbose-tree nodesize="65536" input="@{input.dir}/@{input}" tree="rtree" cachesize="@{cachesize}" 
                       output="interesting.verbose.r" output.dir="@{output.dir}"/>
      </sequential>
    </macrodef>
    

    <macrodef name="run-node-size-experiment-spf">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <sequential>
        <parallel threadCount="2">
          <run-node-size-experiment-rr input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" 
                                       output="@{output}_buflargest.rr" pushdownstrategy="BUF_LARGEST" 
                                       bufsize="17000" sizeby="allops"/>
          <run-node-size-experiment-r input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" 
                                      output="@{output}.r" cachesize="112"/>
        </parallel>
      </sequential>
    </macrodef>

    <macrodef name="run-node-size-experiment-uniform">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <attribute name="output"/>
      <sequential>
        <parallel threadCount="2">
          <run-node-size-experiment-rr input.dir="@{input.dir}" input="@{input}" 
                                       output.dir="@{output.dir}" 
                                       output="@{output}_BUF_LARGEST_DIV_BY_CONST_1_6_si.rr"
                                       pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" groupsizecoeff="1.6" 
                                       bufsize="17000"/>
          <run-node-size-experiment-r input.dir="@{input.dir}" input="@{input}" output.dir="@{output.dir}" 
                                      output="@{output}.r" cachesize="112"/>
        </parallel>
      </sequential>
    </macrodef>

    <target name="node-size-experiment-spf">
      <run-node-size-experiment-spf input.dir="${spf.path}" input="spf28mod1t10m3.out" output.dir="../rr-tree-output/node-size-spf" 
                                    output="spf28mod1t10m3"/>
    </target>

    <target name="node-size-experiment-uniform">
      <run-node-size-experiment-uniform input.dir="../datasets" input="uniform3.out" output.dir="../rr-tree-output/node-size-uniform" 
                                        output="uniform3"/>
    </target>

    <target name="node-size-experiment" depends="node-size-experiment-spf,node-size-experiment-uniform" description="Runs the node size experiments"/>

    <macrodef name="run-avg-largest-group-exp-spf">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <parallel threadCount="5">
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="72"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_72"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="215"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_215"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="500"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_500"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="1000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_1000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="2000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_2000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="5000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_5000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="10000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_10000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="17000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_17000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="50000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_50000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="100000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_100000"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="130000"
                                      groupsizecoeff="1.6" outsuffix="BUF_LARGEST_DIV_BY_CONST1_6_si_130000"/>
        </parallel>
      </sequential>
    </macrodef>

    <macrodef name="run-avg-largest-group-exp-uniform">
      <attribute name="input.dir"/>
      <attribute name="input"/>
      <attribute name="output.dir"/>
      <sequential>
        <mkdir dir="@{output.dir}"/>
        <parallel threadCount="5">
          <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                        bufsize="72"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_72" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="215"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_215" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="500"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_500" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="1000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_1000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="2000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_2000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="5000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_5000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="10000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_10000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="17000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_17000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="50000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_50000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="100000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_100000" sizeby="allops"/>
        <verbose-tree-with-rootgsizes input="@{input}" input.dir="@{input.dir}" output.dir="@{output.dir}" pushdownstrategy="BUF_LARGEST_DIV_BY_CONST" 
                                      bufsize="130000"
                                      groupsizecoeff="1.2" outsuffix="BUF_LARGEST_DIV_BY_CONST1_2_130000" sizeby="allops"/>
        </parallel>
      </sequential>
    </macrodef>


    <target name="avg-largest-group-exp-spf">
      <run-avg-largest-group-exp-spf input.dir="${spf.path}" input="spf28mod1t10m3" output.dir="../rr-tree-output/avg-largest-group-spf"/>
    </target>

    <target name="avg-largest-group-exp-uniform">
      <run-avg-largest-group-exp-uniform input.dir="../datasets" input="uniform3" output.dir="../rr-tree-output/avg-largest-group-uniform"/>
    </target>

    <target name="avg-largest-group-exp" depends="avg-largest-group-exp-spf,avg-largest-group-exp-uniform" description="Run the average largest group experiments"/>

</project>
